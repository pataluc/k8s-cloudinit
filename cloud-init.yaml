#cloud-config
package_update: true
package_upgrade: true
packages:
  # Update the apt package index and install packages needed to use the Docker and Kubernetes apt repositories over HTTPS
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release


# Let iptables see bridged traffic
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#letting-iptables-see-bridged-traffic
write_files:
 - path: /etc/modules-load.d/k8s.conf
   content: |
    br_netfilter  
 
 - path: /etc/sysctl.d/k8s.conf
   content: |
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1

users:
- name: celuc
    sudo: ALL=(ALL) ALL
    groups: users, admin
    ssh_import_id:
      - celuc
      - gh:pataluc
    lock_passwd: true

# Add default auto created user to docker group
system_info:
  default_user:
    groups: [docker]

runcmd:
 - modprobe br_netfilter # Load br_netfilter module.
 - curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg   
 - echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list # Add the Kubernetes apt repository
 - apt-get update -y # Update apt package index
 - apt-get install -y containerd.io kubelet kubeadm kubectl # Install Docker Engine, kubelet, kubeadm and kubectl 
 - apt-mark hold kubelet kubeadm kubectl # pin kubelet kubeadm kubectl version
 - sysctl --system # Reload settings from all system configuration files to take iptables configuration
